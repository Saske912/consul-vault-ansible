---
- name: Install and configure Consul
  hosts: all
  become: true
  vars:
    additional_dnsnames: "{{ groups['all'][1:] }}"

  tasks:
    - name: Copy Consul binary
      copy:
        src: binaries/consul_1.16.1_linux_amd64.zip
        dest: /tmp/consul.zip

    - name: Install unzip
      ansible.builtin.apt:
        name: unzip
        state: present

    - name: Unzip Consul
      unarchive:
        src: /tmp/consul.zip
        dest: /usr/local/bin
        remote_src: yes

    - name: Create Consul group
      group:
        name: consul
        state: present

    - name: Create Consul user
      user:
        name: consul
        group: consul
        shell: /bin/nologin
        home: /nonexistent
        system: yes

    - name: Create Consul data directory
      file:
        path: /var/consul
        state: directory
        owner: consul
        group: consul

    - name: Generate Consul encryption key on the first host
      shell: consul keygen
      register: consul_key
      when: inventory_hostname == groups['all'][0]

    - name: Save Consul encryption key to a local file
      local_action: copy content="{{ consul_key.stdout }}" dest=./consul_key.txt
      when: inventory_hostname == groups['all'][0]

    - name: Read Consul encryption key from local file
      slurp:
        src: ./consul_key.txt
      register: key_file_content
      when: inventory_hostname != groups['all'][0]

    - name: Create Consul keys directory
      file:
        path: /etc/consul.d/server/keys
        recurse: true
        state: directory
        owner: consul
        group: consul

    - name: Check if .pem files exist
      find:
        paths: "/etc/consul.d/server/keys/"
        patterns: "*.pem"
      register: pem_files
      delegate_to: "{{ groups['all'][0] }}"
      when: inventory_hostname == groups['all'][0]

    - name: Generate Consul TLS CA on the first host
      shell: consul tls ca create -days=5000 -domain {{ inventory_hostname }}
      args:
        chdir: /etc/consul.d/server/keys
      when: inventory_hostname == groups['all'][0] and pem_files.matched == 0

    - name: Generate Consul server TLS certificates
      shell: >
        consul tls cert create -days=3650 -server -dc dc{{ loop_index }} -domain {{ inventory_hostname }} {{ additional_dnsnames_args }}
      args:
        chdir: /etc/consul.d/server/keys
      vars:
        additional_dnsnames_args: "{% for dnsname in additional_dnsnames %}-additional-dnsname={{ dnsname }} {% endfor %}"
      loop: "{{ groups['all'] }}"
      loop_control:
        index_var: loop_index
      when: inventory_hostname == groups['all'][0] and pem_files.matched == 0

    # - name: Copy certificates to respective servers
    #   synchronize:
    #     src: "/etc/consul.d/server/keys/"
    #     dest: "/etc/consul.d/server/keys/"
    #     # rsync_opts: "--exclude '*.pem'"
    #   delegate_to: "{{ item }}"
    #   loop: "{{ groups['all'][1:] }}" # Пропускаем первый хост
    #   loop_control:
    #     loop_var: item
    #   when: inventory_hostname != groups['all'][0]

    - name: Change ownership and permissions of .pem files
      ansible.builtin.file:
        path: /etc/consul.d/server/keys/
        recurse: yes
        owner: consul
        group: consul
        mode: "0640"
      delegate_to: "{{ groups['all'][0] }}"
      when: inventory_hostname == groups['all'][0]

    - name: Copy certificates to local machine
      become: true
      copy:
        src: "/etc/consul.d/server/keys/"
        dest: "keys"
      delegate_to: localhost
      run_once: true
      when: inventory_hostname == groups['all'][0]

    - name: Copy certificates from local machine to remote hosts
      copy:
        src: "keys/"
        dest: "/etc/consul.d/server/keys/"
      loop: "{{ groups['all'][1:] }}" # Пропускаем первый хост
      loop_control:
        loop_var: item
      when: inventory_hostname != groups['all'][0]

    # - name: Copy Consul configuration files
    #   copy:
    #     src: /path/to/consul_configs
    #     dest: /etc/consul.d
    #     owner: root
    #     group: root
    #     mode: 0644

    # - name: Copy Consul key to configuration
    #   lineinfile:
    #     path: /etc/consul.d/server/consul.hcl
    #     line: 'encrypt = "{{ consul_key.stdout }}"'
    #   when: consul_key.changed

    # - name: Start Consul service
    #   systemd:
    #     name: consul
    #     state: started
    #     enabled: yes
